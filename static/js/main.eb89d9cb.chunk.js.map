{"version":3,"sources":["components/Statistics/statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/Feedback/feedback.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","defaultProps","FeedbackOptions","options","onLeaveFeedback","map","option","styles","FeedbackButton","onClick","Section","title","children","Notification","message","Feedback","state","props","handleIncrement","setState","prevState","this","procentage","Math","round","Object","keys","Component","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"kOAEMA,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,gCACE,8BACE,sBAAMC,UAAU,iBAAhB,sCADF,SACyE,IACvE,+BAAOL,OAET,8BACE,sBAAMK,UAAU,iBAAhB,+BADF,WACoE,IAClE,+BAAOJ,OAET,8BACE,sBAAMI,UAAU,iBAAhB,yCADF,QAC2E,IACzE,+BAAOH,OAET,uCAEE,+BAAOC,GAAgB,OAEzB,mDAEE,+BAAOC,GAA0C,IAFnD,WAQSL,IAEfA,EAAWO,aAAe,CACxBN,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,G,oBCrBPG,EAZS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACvB,yBACEN,UAAWO,IAAOC,eAElBC,QAAS,kBAAML,EAAgBE,IAHjC,UAKE,sBAAMN,UAAU,iBAAhB,0BACCM,IAJIA,OCIII,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,gCACE,6BAAKD,IACJC,MCAQC,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,6BAAKA,KCGRC,E,4MASJC,MAAQ,CACNrB,KAAM,EAAKsB,MAAMtB,KACjBC,QAAS,EAAKqB,MAAMrB,QACpBC,IAAK,EAAKoB,MAAMpB,K,EAGlBqB,gBAAkB,SAAAZ,GAChB,OAAO,EAAKa,UAAS,SAAAC,GAAS,sBAC3Bd,EAASc,EAAUd,GAAU,O,4CAIlC,WACE,IAAMR,EAAQuB,KAAKL,MAAMrB,KAAO0B,KAAKL,MAAMpB,QAAUyB,KAAKL,MAAMnB,IAC1DyB,EAAaC,KAAKC,MAAyB,IAAlBH,KAAKL,MAAMrB,KAAcG,GAClDK,EAAUsB,OAAOC,KAAKL,KAAKL,OAEjC,OACE,gCACE,cAAC,EAAD,CAASL,MAAM,wBAAf,SACE,cAAC,EAAD,CACER,QAASA,EACTC,gBAAiBiB,KAAKH,oBAIzBpB,EACC,cAAC,EAAD,CAASa,MAAM,aAAf,SACE,cAAC,EAAD,CACEhB,KAAM0B,KAAKL,MAAMrB,KACjBC,QAASyB,KAAKL,MAAMpB,QACpBC,IAAKwB,KAAKL,MAAMnB,IAChBC,MAAOuB,KAAKL,MAAMrB,KAAO0B,KAAKL,MAAMpB,QAAUyB,KAAKL,MAAMnB,IACzDE,mBAAoBuB,MAIxB,cAAC,EAAD,CAAcR,QAAQ,6B,GA9CTa,aAAjBZ,EACGd,aAAe,CACpBN,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPwB,WAAY,GA+CDP,QCnDAa,MAJf,WACE,OAAO,cAAC,EAAD,KCATC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,eAAiB,2C","file":"static/js/main.eb89d9cb.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div>\r\n      <p>\r\n        <span className=\"material-icons\">sentiment_very_satisfied</span> Good:{' '}\r\n        <span>{good}</span>\r\n      </p>\r\n      <p>\r\n        <span className=\"material-icons\">sentiment_neutral</span>Neutral:{' '}\r\n        <span>{neutral}</span>\r\n      </p>\r\n      <p>\r\n        <span className=\"material-icons\">sentiment_very_dissatisfied</span> Bad:{' '}\r\n        <span>{bad}</span>\r\n      </p>\r\n      <p>\r\n        Total:\r\n        <span>{total ? total : 0}</span>\r\n      </p>\r\n      <p>\r\n        Positive Feedback:\r\n        <span>{positivePercentage ? positivePercentage : 0}</span>%\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.defaultProps = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n  total: 0,\r\n  positivePercentage: 0,\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return options.map(option => (\r\n    <button\r\n      className={styles.FeedbackButton}\r\n      key={option}\r\n      onClick={() => onLeaveFeedback(option)}\r\n    >\r\n      <span className=\"material-icons\">star_outline</span>\r\n      {option}\r\n    </button>\r\n  ));\r\n};\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <h2>{message}</h2>;\r\n};\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport Statistics from '../Statistics';\r\nimport FeedbackOptions from '../FeedbackOptions';\r\nimport Section from '../Section';\r\nimport Notification from '../Notification';\r\n\r\nclass Feedback extends Component {\r\n  static defaultProps = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n    total: 0,\r\n    procentage: 0,\r\n  };\r\n\r\n  state = {\r\n    good: this.props.good,\r\n    neutral: this.props.neutral,\r\n    bad: this.props.bad,\r\n  };\r\n\r\n  handleIncrement = option => {\r\n    return this.setState(prevState => ({\r\n      [option]: prevState[option] + 1,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const total = this.state.good + this.state.neutral + this.state.bad;\r\n    const procentage = Math.round((this.state.good * 100) / total);\r\n    const options = Object.keys(this.state);\r\n\r\n    return (\r\n      <div>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={options}\r\n            onLeaveFeedback={this.handleIncrement}\r\n          ></FeedbackOptions>\r\n        </Section>\r\n\r\n        {total ? (\r\n          <Section title=\"Statistics\">\r\n            <Statistics\r\n              good={this.state.good}\r\n              neutral={this.state.neutral}\r\n              bad={this.state.bad}\r\n              total={this.state.good + this.state.neutral + this.state.bad}\r\n              positivePercentage={procentage}\r\n            ></Statistics>\r\n          </Section>\r\n        ) : (\r\n          <Notification message=\"No feedback given\"></Notification>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n","import React from 'react';\n\nimport Feedback from './components/Feedback';\n\nfunction App() {\n  return <Feedback />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackButton\":\"FeedbackOptions_FeedbackButton__2TxRH\"};"],"sourceRoot":""}