{"version":3,"sources":["components/Statistics/statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Feedback/feedback.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","defaultProps","FeedbackOptions","options","onLeaveFeedback","map","option","onClick","Feedback","state","handleIncrement","event","target","outerText","setState","prevState","this","procentage","Math","round","Object","keys","className","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAEMA,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,gCACE,4CACA,uCACQ,+BAAOJ,OAEf,0CACW,+BAAOC,OAElB,sCACO,+BAAOC,OAEd,uCAEE,+BAAOC,GAAgB,OAEzB,mDAEE,+BAAOC,GAA0C,IAFnD,WAQSL,IAEfA,EAAWM,aAAe,CACxBL,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,GClCtB,IAOeE,EAPS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACvB,wBAAqBC,QAASH,EAA9B,SACGE,GADUA,OCEXE,E,4MAMJC,MAAQ,CACNb,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPY,gBAAkB,SAAAC,GACDA,EAAMC,OAAOC,UAE5B,OAAO,EAAKC,UAAS,SAAAC,GAAS,MAAK,CACjClB,QAASkB,EAAUlB,QAAU,O,4CAgBjC,WACE,IAAME,EAAQiB,KAAKP,MAAMb,KAAOoB,KAAKP,MAAMZ,QAAUmB,KAAKP,MAAMX,IAC1DmB,EAAaC,KAAKC,MAAyB,IAAlBH,KAAKP,MAAMb,KAAcG,GAClDI,EAAUiB,OAAOC,KAAKL,KAAKP,OAEjC,OACE,sBAAKa,UAAU,WAAf,UACE,uDACA,cAAC,EAAD,CACEnB,QAASA,EACTC,gBAAiBY,KAAKN,kBAGxB,cAAC,EAAD,CACEd,KAAMoB,KAAKP,MAAMb,KACjBC,QAASmB,KAAKP,MAAMZ,QACpBC,IAAKkB,KAAKP,MAAMX,IAChBC,MAAOiB,KAAKP,MAAMb,KAAOoB,KAAKP,MAAMZ,QAAUmB,KAAKP,MAAMX,IACzDE,mBAAoBiB,W,GAlDPM,aAAjBf,EACGP,aAAe,CACpBF,MAAO,EACPkB,WAAY,GAsDDT,QCrDAgB,MAJf,WACE,OAAO,cAAC,EAAD,KCATC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.30062231.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div>\r\n      <h2>Statistics</h2>\r\n      <p>\r\n        Good: <span>{good}</span>\r\n      </p>\r\n      <p>\r\n        Neutral: <span>{neutral}</span>\r\n      </p>\r\n      <p>\r\n        Bad: <span>{bad}</span>\r\n      </p>\r\n      <p>\r\n        Total:\r\n        <span>{total ? total : 0}</span>\r\n      </p>\r\n      <p>\r\n        Positive Feedback:\r\n        <span>{positivePercentage ? positivePercentage : 0}</span>%\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.defaultProps = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n  total: 0,\r\n  positivePercentage: 0,\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n","const FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return options.map(option => (\r\n    <button key={option} onClick={onLeaveFeedback}>\r\n      {option}\r\n    </button>\r\n  ));\r\n};\r\nexport default FeedbackOptions;\r\n","import React, { Component } from 'react';\r\nimport Statistics from '../Statistics/statistics';\r\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\r\n\r\nclass Feedback extends Component {\r\n  static defaultProps = {\r\n    total: 0,\r\n    procentage: 0,\r\n  };\r\n\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleIncrement = event => {\r\n    const option = event.target.outerText;\r\n\r\n    return this.setState(prevState => ({\r\n      neutral: prevState.neutral + 1,\r\n    }));\r\n  };\r\n\r\n  // handleIncrementNeutral = () => {\r\n  //   return this.setState(prevState => ({\r\n  //     neutral: prevState.neutral + 1,\r\n  //   }));\r\n  // };\r\n\r\n  // handleIncrementBad = () => {\r\n  //   return this.setState(prevState => ({\r\n  //     bad: prevState.bad + 1,\r\n  //   }));\r\n  // };\r\n\r\n  render() {\r\n    const total = this.state.good + this.state.neutral + this.state.bad;\r\n    const procentage = Math.round((this.state.good * 100) / total);\r\n    const options = Object.keys(this.state);\r\n\r\n    return (\r\n      <div className=\"feedback\">\r\n        <h1>Please leave feedback</h1>\r\n        <FeedbackOptions\r\n          options={options}\r\n          onLeaveFeedback={this.handleIncrement}\r\n        ></FeedbackOptions>\r\n\r\n        <Statistics\r\n          good={this.state.good}\r\n          neutral={this.state.neutral}\r\n          bad={this.state.bad}\r\n          total={this.state.good + this.state.neutral + this.state.bad}\r\n          positivePercentage={procentage}\r\n        ></Statistics>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n","import React from 'react';\n\nimport Feedback from './components/Feedback/feedback';\n\nfunction App() {\n  return <Feedback />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}